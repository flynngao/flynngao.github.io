I"d	<h2 id="algorithm">Algorithm</h2>

<p><strong>Leetcode 139</strong> <a href="https://leetcode.com/problems/word-break/">Word Break</a></p>

<p>又是一条经典的问题，我凭借模糊的记忆重做了一遍，根据youtube上的视频，属于dp问题的1.2问题，就是输入是一个O(n)的数组，但是要求解所有子问题的中的最优解，这样就确定时间复杂度必定是o(n^2)，针对dp学习到的一些模式卸载分享部分里</p>

<pre><code class="language-javascript">var wordBreak = function(s, wordDict) {
    let dp = new Array(s.length + 1).fill(false);
    dp[0] = 1; // 最早初始化
    for(let i = 0;i &lt;= s.length; i++) {
        if(dp[i]) {
            for(let j = i + 1; j &lt;= s.length; j++) {
                let temps = s.substring(i, j)
                if(wordDict.indexOf(temps) !== -1) {
                    dp[j] = true;
                }
            }
        }
    }
    return dp[s.length];
};

</code></pre>

<h2 id="review">Review</h2>

<p><a href="https://www.dannymoerkerke.com/blog/web-components-will-replace-your-frontend-framework">Web Components will replace your frontend framework</a></p>

<p>作者主要描述了，像document.querySelector这样的接口出现逐渐替代了JQuery，随着webcomponent标准的推进，现有的三大框架体系都可能可以被替换，作者使用了大量篇幅来暂时了用webcomponent如何完成各类组件的形态，并且写了一个小的组件库<a href="https://dannymoerkerke.github.io/material-webcomponents">material-webcomponents</a>，准备阅读一下代码并且学习一下</p>

<h2 id="tip--share">Tip &amp;&amp; Share</h2>

<p>认真的复习了一下flex布局，知识点实在是多</p>

<h4 id="基础属性">基础属性</h4>

<p>基础属性分成容器属性（父节点）和Item属性（子节点）</p>

<p>父节点相关属性：display：flex，flex-direction，flex-wrap，justify-content(水平), align-items(垂直)，align-content，flex-wrap
子节点相关属性：align-self，flex-grow，flex-shrink，order，flex-basis</p>

<p>其中比较关键的部分是flex-basis和direction改变之后的轴的变换</p>

<p>参考文章：<a href="https://www.w3cplus.com/css3/understanding-flexbox-everything-you-need-to-know.html">理解Flexbox：你需要知道的一切</a>
<a href="https://codepen.io/flynngao/pen/gyXzJG">codepen实践</a></p>
:ET